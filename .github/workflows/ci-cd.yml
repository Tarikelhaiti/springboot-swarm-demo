name: CI-CD Swarm

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build app (Maven)
        working-directory: app
        run: mvn -B -q -DskipTests package

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute lowercase image tag
        id: img
        shell: bash
        run: |
          IMAGE="ghcr.io/${{ github.repository }}:latest"
          IMAGE_LC="$(echo "$IMAGE" | tr '[:upper:]' '[:lower:]')"
          echo "tag=$IMAGE_LC" >> "$GITHUB_OUTPUT"

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: ./app
          push: true
          tags: ${{ steps.img.outputs.tag }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy stack file to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy/docker-stack.yml"
          target: "/home/${{ secrets.SSH_USER }}/"

      - name: Deploy to Swarm via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            REPO_LC=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')

            # Login to GHCR on the VM (id√©al: PAT avec read:packages)
            if [ -n "${{ secrets.GHCR_PAT }}" ]; then
              echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            else
              echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin || true
            fi

            docker pull ghcr.io/$OWNER_LC/$REPO_LC:latest || true

            # Exporte (si ton docker-stack.yml utilise ces variables)
            export GITHUB_OWNER="$OWNER_LC"
            export REPO_NAME="$REPO_LC"

            docker stack deploy -c /home/${{ secrets.SSH_USER }}/deploy/docker-stack.yml swarmdemo
            docker service ls
            docker service ps swarmdemo_app || true
