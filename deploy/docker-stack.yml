version: "3.9"

networks:
  app_net:
    driver: overlay

volumes:
  pgdata: {}
  kafkadata: {}

secrets:
  db_password:
    external: true

services:
    postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: app
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password        # <-- AJOUTE CETTE SECTION
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [app_net]
    deploy:
      replicas: 1

  kafka:
    image: bitnami/kafka:3.7
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_KRAFT_CLUSTER_ID: "kRaFtClusterAAAAAA"
    volumes:
      - kafkadata:/bitnami/kafka
    networks: [app_net]
    deploy:
      replicas: 1

  app:
    image: ghcr.io/${GITHUB_OWNER}/${REPO_NAME}:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    networks: [app_net]
    depends_on: [postgres, kafka]
    deploy:
      replicas: 1
      restart_policy: { condition: on-failure }
